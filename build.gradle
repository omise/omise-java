apply plugin: 'java'
apply plugin: 'java-library-distribution'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'

group 'co.omise'
version '4.4.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        maven {
               url 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.15.0'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:4.2.1.3168'
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

distributions {
    main {
        distributionBaseName = 'omise-java'
    }
}

signing {
    def signingKey = System.getenv('PGP_SIGNING_KEY')
    def signingPwd = System.getenv('PGP_SIGNING_PASSWORD')

    useInMemoryPgpKeys(signingKey, signingPwd)

    sign configurations.archives
}

artifacts {
    archives javadocJar, sourcesJar
}

/**
 * {@link Package#getImplementationVersion()} on IDE will alway return `null`
 * because this method read data from `META-INF/MANIFEST.MF` that contain in `.jar`.
 * If need to check it, you have to run directly to `.jar` will return correct value.
 *
 * Run `gradle shadowJar` and `unzip -p build/libs/omise-java-3.0.0-all.jar META-INF/MANIFEST.MF`
 * will return attributes in manifest file.
 */
jar {
    manifest {
        attributes 'Implementation-Version': archiveVersion
    }
}

shadowJar {
    // Include all manifest from jar to shadowJar
    manifest {
        inheritFrom jar.manifest
    }
    relocate 'okhttp3', 'co.omise.dependencies.okhttp3'
    relocate 'okio', 'co.omise.dependencies.okio'
    relocate 'com.fasterxml.jackson', 'co.omise.dependencies.com.fasterxml.jackson'
}


jacocoTestReport {
    reports {
        xml.enabled true
    }
}

sonarqube {
  properties {
    property('sonar.projectKey', 'omise_omise-java')
    property('sonar.organization', 'omise')
    property('sonar.host.url', 'https://sonarcloud.io')
  }
}

dependencies {
    // base
    implementation 'joda-time:joda-time:2.9.9'

    // persistence
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.10'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.9.10'

    // networking
    implementation 'com.squareup.okhttp3:okhttp:3.7.0'

    // test
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.google.guava:guava:20.0'

}
