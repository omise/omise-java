apply plugin: 'java'
apply plugin: 'java-library-distribution'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'jacoco'

if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
  apply plugin: 'org.sonarqube'
}

group 'co.omise'
version '4.4.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
}

buildscript {
  repositories {
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }

  dependencies {
    classpath 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.15.0'
    if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
      classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:4.3.0.3225'
    }
  }
}

task javadocJar(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}

task sourcesJar(type: Jar) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

distributions {
  main {
    distributionBaseName = 'omise-java'
  }
}

signing {
  def signingKey = System.getenv('PGP_SIGNING_KEY')
  def signingPwd = System.getenv('PGP_SIGNING_PASSWORD')

  useInMemoryPgpKeys(signingKey, signingPwd)

  sign configurations.archives
}

artifacts {
  archives javadocJar, sourcesJar
}

def ossrhUsername = System.getenv("SONATYPE_USERNAME")
def ossrhPassword = System.getenv("SONATYPE_PASSWORD")

publishing {
  publications {
    mavenJava(MavenPublication) {
      artifactId 'omise-java'
      pom {
        name = 'Omise Java'
        description = 'Java bindings for the Omise API'
        url = 'https://www.omise.co'
        licenses {
          license {
            name = 'The MIT License (MIT)'
            url = 'https://opensource.org/licenses/MIT'
          }
        }
        developers {
          developer {
            id = 'chakrit'
            name = 'Omise'
            email = 'support@opn.ooo'
          }
        }
        scm {
          connection = 'scm:git:git://git.github.com/omise/omise-java'
          developerConnection = 'scm:git:git://git.github.com/omise/omise-java'
          url = 'https://github.com/omise/omise-java'
        }
      }
    }
  }

  repositories {
    maven {
      url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
      credentials {
        username  = ossrhUsername
        password = ossrhPassword
      }
    }

    maven {
      name = 'snapshotRepository'
      url = 'https://oss.sonatype.org/content/repositories/snapshots'
      credentials {
        username  = ossrhUsername
        password = ossrhPassword
      }
    }
  }
}

signing {
    sign publishing.publications.mavenJava
}

/**
 * {@link Package#getImplementationVersion()} on IDE will alway return `null`
 * because this method read data from `META-INF/MANIFEST.MF` that contain in `.jar`.
 * If need to check it, you have to run directly to `.jar` will return correct value.
 *
 * Run `gradle shadowJar` and `unzip -p build/libs/omise-java-3.0.0-all.jar META-INF/MANIFEST.MF`
 * will return attributes in manifest file.
 */
jar {
  manifest {
    attributes 'Implementation-Version': archiveVersion
  }
}

shadowJar {
  // Include all manifest from jar to shadowJar
  manifest {
    inheritFrom jar.manifest
  }
  relocate 'okhttp3', 'co.omise.dependencies.okhttp3'
  relocate 'okio', 'co.omise.dependencies.okio'
  relocate 'com.fasterxml.jackson', 'co.omise.dependencies.com.fasterxml.jackson'
}

jacocoTestReport {
  reports {
    xml.enabled true
  }
}

if (JavaVersion.current() != JavaVersion.VERSION_1_8) {
  sonar {
    properties {
      property('sonar.projectKey', 'omise_omise-java')
      property('sonar.organization', 'omise')
      property('sonar.host.url', 'https://sonarcloud.io')
    }
  }
}

dependencies {
  // base
  implementation 'joda-time:joda-time:2.9.9'

  // persistence
  implementation 'com.fasterxml.jackson.core:jackson-core:2.9.10'
  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.9.10'

  // networking
  implementation 'com.squareup.okhttp3:okhttp:3.7.0'

  // test
  testImplementation 'junit:junit:4.12'
  testImplementation 'com.google.guava:guava:20.0'

}
